% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/evaluation_function_gensa.R
\name{evaluation_function_gensa}
\alias{evaluation_function_gensa}
\title{Evaluation function for phenoflex formatted for GenSA optimizer}
\usage{
evaluation_function_gensa(
  x,
  modelfn,
  bloomJDays,
  SeasonList,
  intermed_par = TRUE,
  q10_lower = 1.5,
  q10_upper = 3.5,
  q10_penalty = 10^10,
  na_penalty = 365
)
}
\arguments{
\item{x}{model parameters of PhenoFlex. Expected order when intermed_par = TRUE (default) yc, zc, s1, Tu, theta_star, theta_c, tau, pie_c, Tf, Tc, Tb, slope.
Expected order when intermed_par = FALSE yc, zc, s1, Tu, E0, E1, A0, A1, Tf, Tc, Tb, slope.}

\item{modelfn}{function used within the evaluation function to calculate the actual bloomday, often we use
the 'custom_GDH_wrapper' function for that}

\item{bloomJDays}{numeric containing the days of the year witht the observed bloom}

\item{SeasonList}{list of hourly temperatures for the individual phenological seasons. Each element should contain a data.frame
with the columns "Temp" (for the hourly temperature) and "JDay" for the corresponding Julian day. Is usually
generated using \link[chillR]{genSeasonList}}

\item{intermed_par}{boolean, by default TRUE. Decides if intermediate parameter format is used, when set equal FALSE, then old format without conversion step is used}

\item{q10_lower}{lower boundary of Q10 metric, affects the E0 to A1 parameters. 
By default set to 1.5. If parameters lead to lower Q10 score, the evalfunction punishes the parameters, despite their 
predictive performance}

\item{q10_upper}{upper boundary of Q10 metric, affects the E0 to A1 parameters. 
By default set to 3.5. If parameters lead to higher Q10 score, the evalfunction punishes the parameters, despite their 
predictive performance}

\item{q10_penalty}{by default 10^10, the penalty when the calculated Q10 metric is outside the upper and lower boundary}

\item{na_penalty}{numeric, value which is used when the model fails to generate a prediction
for the bloom date. By default 365}
}
\value{
residual sum of predicted and observed bloom dates. This is the score that optimizer tries to reduce
}
\description{
This function communicates with the GenSA optimizer during the model calibration. It
takes model parameters and seasonlist, predicts bloom dates, compares it to the 
observed bloom dates and returns an error score. The optimizer
tries to reduce the error score.
}
\details{
Parameters can follow the traditional format (with the E0 to A1 parameters),
or include the intermediate parameter format (with theta_star to tau). In case of
intermediate parameters, they get converted to the traditional format before bloom dates are calculated.
}
\author{
Lars Caspersen
}
\keyword{utility}
