% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/evaluation_function_meigo_nonlinear.R
\name{evaluation_function_meigo_nonlinear}
\alias{evaluation_function_meigo_nonlinear}
\title{Function used in the optimization process to generate bloom data}
\usage{
evaluation_function_meigo_nonlinear(
  x,
  modelfn,
  bloomJDays,
  SeasonList,
  na_penalty = 365
)
}
\arguments{
\item{x}{traditional model parameters of PhenoFlex in the order yc, zc, s1, Tu, theta_star, theta_c, tau, pie_c, Tf, Tc, Tb, slope.}

\item{modelfn}{function used within the evaluation function to calculate the actual bloomday, often we use
the 'custom_GDH_wrapper' function for that}

\item{bloomJDays}{numeric containing the days of the year witht the observed bloom}

\item{SeasonList}{list of hourly temperatures for the individual phenological seasons. Each element should contain a data.frame
with the columns "Temp" (for the hourly temperature) and "JDay" for the corresponding Julian day. Is usually
generated using \link[chillR]{genSeasonList}}

\item{na_penalty}{numeric, value which is used when the model fails to generate a prediction
for the bloom date. By default 365}
}
\value{
list with two elements. First is called 'f' and contains the residual sum of squares of the model. The 
second is 'g' which is the values of the additional model constraints defined in the function.
}
\description{
This function works like \link[LarsChill]{evaluation_function_meigo} except that it uses 
parameters theta_star, theta_c, tau and pie_c instead of the commonly used
E0, E1, A0 and A1 parameters, which get calculated in an intermediate step.
}
\details{
This function follows the approach suggested in Egea 2021 and solves a 
nonlinear system of equations to derive the parameters E0, E1, A0 and A1 from the 
newly used parameters theta_star, theta_c, tau and pie_c. '
}
\author{
Lars Caspersen
}
\keyword{utility}
